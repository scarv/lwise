# Copyright (C) 2021 SCARV project <info@scarv.org>
#
# Use of this source code is restricted per the MIT license, a copy of which 
# can be found at https://opensource.org/licenses/MIT (or should be included 
# as LICENSE.txt within the associated archive or repository).

export LD_LIBRARY_PATH = $(RISCV_ROCKET)/lib
export FPGA_BUILD      = $(REPO_HOME)/build/fpga
export FPGA            = $(REPO_HOME)/src/hw/fpga
export SOC	           = $(ARCH)-rocket

ALGs = ascon elephant gift grain photon romulus sparkle jambu xoodyak

VIVADO_PROJECT = $(ALG)-$(SOC)-$(ISE)_$(BOARD)-imp
prog_mem       = $(FPGA_BUILD)/$(VIVADO_PROJECT)/prog-bin/prog.mem

VIVADO = vivado -nolog -nojournal

#--------------------------------------------------------------------
# ISE Implementation
#--------------------------------------------------------------------
include ${REPO_HOME}/src/hw/rtl/rvzbk/$(ARCH)/Makefile.in
include ${REPO_HOME}/src/hw/rtl/$(ALG)/$(ARCH)/Makefile.in

#--------------------------------------------------------------------
# Systems
#--------------------------------------------------------------------
include $(FPGA)/board/$(BOARD)/script/bsp
include $(FPGA)/soc/$(SOC)/Makefile.in

#--------------------------------------------------------------------
# Sources
#--------------------------------------------------------------------
rocketchip_support_src = \
    $(ROCKETCHIP_REPO)/src/main/resources/vsrc/plusarg_reader.v \
    $(ROCKETCHIP_REPO)/src/main/resources/vsrc/EICG_wrapper.v

rocketchip_cop_ram_src =\
    $(ROCKETCHIP_REPO)/vsim/generated-src/$(ROCKET).$(COP_FPGACONFIG).behav_srams.v

rocketchip_xalu_ram_src ?=\
    $(ROCKETCHIP_REPO)/vsim/generated-src/$(ROCKET).$(XALU_FPGACONFIG).behav_srams.v

rtl_sources = $(wildcard $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/*.v)

#--------------------------------------------------------------------
# Gathering Verilogs for FPGA Project
#--------------------------------------------------------------------
fpga-verilog: $(ISE)_verilog

.PHONY: fpga-verilog rocket-withcop rocket-withxalu

#--------------------------------------------------------------------
# Project generation
#--------------------------------------------------------------------
vivado_project_file = $(FPGA_BUILD)/$(VIVADO_PROJECT)/$(VIVADO_PROJECT).xpr
vivado-project: fpga-verilog | $(vivado_project_file)
$(vivado_project_file): 
	$(shell sed -i 's/CONFIG.PRIM_SOURCE.*/''CONFIG.PRIM_SOURCE {$(clktype)} \\''/g' $(FPGA)/soc/$(SOC)/script/make_project.tcl)
	$(shell sed -i 's/CONFIG.PRIM_IN_FREQ.*/''CONFIG.PRIM_IN_FREQ {$(inclock)} \\''/g' $(FPGA)/soc/$(SOC)/script/make_project.tcl)
	$(shell sed -i 's/set_property verilog_define.*/''set_property verilog_define \[list FPGA $(clktype)\] \[get_filesets sources_1\] ''/g' $(FPGA)/soc/$(SOC)/script/make_project.tcl)
	$(VIVADO) -mode batch -source $(FPGA)/soc/$(SOC)/script/make_project.tcl -tclargs $(VIVADO_PROJECT) $(FPGA) $(FPGA_BUILD) $(BOARD) $(part)  

prebuilt  = ${REPO_HOME}/bitstream/$(BOARD)_$(ARCH)_$(ALG).bit
bitstream = $(FPGA_BUILD)/$(VIVADO_PROJECT)/$(VIVADO_PROJECT).runs/impl_1/system_top_wrapper.bit
bitstream: $(bitstream) 
$(bitstream) : $(rtl_sources)  $(vivado_project_file)
	$(VIVADO) -mode batch -source $(FPGA)/script/make_bitstream.tcl -tclargs $(VIVADO_PROJECT) $(FPGA_BUILD)

update-bistream: $(bitstream)
	cp -f $(bitstream) $(prebuilt)

program-fpga: $(prebuilt)
	$(VIVADO) -mode batch -source $(FPGA)/script/program.tcl -tclargs $(device) $(prebuilt)

vivado: $(vivado_project_file)
	$(VIVADO) $(vivado_project_file) &

.PHONY: vivado-project program-fpga vivado 

#--------------------------------------------------------------------
# Sofware Support
#--------------------------------------------------------------------
include ${REPO_HOME}/src/hw/fpga/software/Makefile.in

fpga-scan : 
	@PYTHONPATH="$(FPGA)/script/" python3 ${SW}/${ALG}/fpga-scan.py --prog --nist --rv32

fpga-scan-all : 
	@$(foreach ALG, $(ALGs), \
		PYTHONPATH="$(FPGA)/script/" python3 ${SW}/${ALG}/fpga-scan.py --prog --nist --rv32; \
	)


# Copyright (C) 2021 SCARV project <info@scarv.org>
#
# Use of this source code is restricted per the MIT license, a copy of which 
# can be found at https://opensource.org/licenses/MIT (or should be included 
# as LICENSE.txt within the associated archive or repository).

#--------------------------------------------------------------------
# Sources
#--------------------------------------------------------------------
include ${REPO_HOME}/src/hw/rtl/$(ALG)/$(ARCH)/Makefile.in
include ${REPO_HOME}/src/hw/rtl/rvzbk/$(ARCH)/Makefile.in

#--------------------------------------------------------------------
# Build emulator
#--------------------------------------------------------------------
ROCKET = freechips.rocketchip.system
EMULATORMODEL = SCARVRocketTest 
COP_CONF64 = SCARVRocketCoPConf64
COP_CONF32 = SCARVRocketCoPConf32

XALU_CONF32 = SCARVRocketXALUConf32
XALU_CONF64 = SCARVRocketXALUConf64

export EMULATOR = ${REPO_HOME}/build/$(ALG)_$(ISE)_emulator$(subst rv,,$(ARCH))

# Notes: building emulator requires RISCV tool supporting the fesvr package
#        building RISCV gnu-gcc toolchain for 64 bit rocketchip requires option: --with-cmodel=medany

emulator : $(EMULATOR)

${REPO_HOME}/build/$(ALG)_cop_emulator64 : $(rtl64_src) $(zbk_rtl) $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	cp -f ${REPO_HOME}/src/hw/verilator/bootrom/bootrom.img          $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/emulator CONFIG=$(COP_CONF64) MODEL=$(EMULATORMODEL)  ISE_RTL=$(RTL64) RVZBK_RTL=$(RV64ZBK) debug
	cp $(ROCKETCHIP_REPO)/emulator/emulator-$(ROCKET)-$(COP_CONF64)-debug  $@

${REPO_HOME}/build/$(ALG)_cop_emulator32 : $(rtl32_src) $(zbk_rtl) $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	cp -f ${REPO_HOME}/src/hw/verilator/bootrom/bootrom.img          $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/emulator CONFIG=$(COP_CONF32) MODEL=$(EMULATORMODEL)  ISE_RTL=$(RTL32) RVZBK_RTL=$(RV32ZBK) debug
	cp $(ROCKETCHIP_REPO)/emulator/emulator-$(ROCKET)-$(COP_CONF32)-debug  $@

${REPO_HOME}/build/$(ALG)_xalu_emulator32 : $(rtl32_src) $(zbk_rtl) $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	cp -f ${REPO_HOME}/src/hw/verilator/bootrom/bootrom.img          $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/emulator CONFIG=$(XALU_CONF32) MODEL=$(EMULATORMODEL) ISE_RTL=$(RTL32) RVZBK_RTL=$(RV32ZBK) debug
	cp $(ROCKETCHIP_REPO)/emulator/emulator-$(ROCKET)-$(XALU_CONF32)-debug  $@

${REPO_HOME}/build/$(ALG)_xalu_emulator64 : $(rtl64_src) $(zbk_rtl) $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	cp -f ${REPO_HOME}/src/hw/verilator/bootrom/bootrom.img          $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/emulator CONFIG=$(XALU_CONF64) MODEL=$(EMULATORMODEL) ISE_RTL=$(RTL64) RVZBK_RTL=$(RV64ZBK) debug
	cp $(ROCKETCHIP_REPO)/emulator/emulator-$(ROCKET)-$(XALU_CONF64)-debug  $@

  
#--------------------------------------------------------------------
# Build software
#--------------------------------------------------------------------
EMU_DEF_CONF  = -DSPARKLE_RV32_TYPE1 -DDRIVER_TRIALS_BIST
EMU_DEF_CONF += -DDRIVER_TRIALS_WARM=1 -DDRIVER_TRIALS_REAL=4 -DDRIVER_MEASURE=1 
EMU_DEF_CONF += -DCRAXS10_ENC_EXTERN -DTRAXL17_ENC_EXTERN -DSPARKLE_FWD_EXTERN 
EMU_DEF_CONF += -DCRAXS10_DEC_EXTERN -DTRAXL17_DEC_EXTERN -DSPARKLE_REV_EXTERN

export EMU_SWCONF ?= ${EMU_DEF_CONF}

export EMU_HAL  = ${REPO_HOME}/src/hw/verilator/hal
export SOFTWARE = ${REPO_HOME}/src/sw
export INCLUDES = ${SOFTWARE}/share ${SOFTWARE}/share/arch/${ARCH} ${SOFTWARE}/${ALG} ${SOFTWARE}/${ALG}/arch/${ARCH} ${SOFTWARE}/${ALG}/imp/${IMP} ${EMU_HAL}

export SOURCES  = $(wildcard $(addsuffix /*.c, ${INCLUDES}))
export SOURCES += $(wildcard $(addsuffix /*.S, ${INCLUDES}))
export HEADERS  = $(wildcard $(addsuffix /*.h, ${INCLUDES}))

MABI       = $(findstring i,$(ARCH:rv32=i))lp$(ARCH:rv%=%)
GCC_FLAGS  = -march=$(ARCH)imac -mabi=$(MABI)  -DPREALLOCATE=1 -mcmodel=medany
GCC_FLAGS += -fno-builtin-printf -static -nostartfiles -T  $(EMU_HAL)/test.ld
GCC_PREFIX = ${RISCV_ROCKET}/bin/riscv64-unknown-elf

export TARGET   = ${REPO_HOME}/build/driver_emu
# -----------------------------------------------------------------------------

${TARGET}.elf : ${SOURCES} ${HEADERS}
	${GCC_PREFIX}-gcc ${EMU_SWCONF} ${GCC_FLAGS} ${GCC_PATHS} $(addprefix -I ,${INCLUDES}) -std='gnu99' -O2 -o ${@} $(filter %.c, ${^}) $(filter %.S, ${^}) ${GCC_LIBS}

${TARGET}.asm : ${TARGET}.elf
	${GCC_PREFIX}-objdump --disassemble-all ${<} > ${@}

emulate: ${EMULATOR} ${TARGET}.elf ${TARGET}.asm
	${EMULATOR} -c -m 7100000 ${TARGET}.elf
emulate-debug : ${EMULATOR} ${TARGET}.elf
	${EMULATOR} -c -x 500000 -v ${REPO_HOME}/build/emu32_eval.vcd -m 2100000 ${TARGET}.elf

include ${REPO_HOME}/src/hw/verilator/verify/$(ARCH)/Makefile.in

emu-clean : 
	@rm --force ${TARGET}.elf
	@rm --force ${TARGET}.asm

# =============================================================================

# Copyright (C) 2021 SCARV project <info@scarv.org>
#
# Use of this source code is restricted per the MIT license, a copy of which 
# can be found at https://opensource.org/licenses/MIT (or should be included 
# as LICENSE.txt within the associated archive or repository).

ROCKET          = freechips.rocketchip.system
FPGAMODEL       = SCARVRocketFPGASystem
COP_FPGACONFIG  = SCARVRocketFPGACoPConf64
XALU_FPGACONFIG = SCARVRocketFPGAXALUConf64


#--------------------------------------------------------------------
# Build Rocket-Chip Verilog
#--------------------------------------------------------------------
fpga-rocketchip-cop-verilog = $(ROCKETCHIP_REPO)/vsim/generated-src/$(ROCKET).$(COP_FPGACONFIG).v
$(fpga-rocketchip-cop-verilog) : 
	cp -f $(FPGA)/soc/$(SOC)/bootrom/bootrom.img             $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/vsim verilog MODEL=$(FPGAMODEL) CONFIG=$(COP_FPGACONFIG)

fpga-rocketchip-xalu-verilog = $(ROCKETCHIP_REPO)/vsim/generated-src/$(ROCKET).$(XALU_FPGACONFIG).v
$(fpga-rocketchip-xalu-verilog) : 
	cp -f $(FPGA)/soc/$(SOC)/bootrom/bootrom.img             $(ROCKETCHIP_REPO)/bootrom/bootrom.img
	$(MAKE) -C $(ROCKETCHIP_REPO)/vsim verilog MODEL=$(FPGAMODEL) CONFIG=$(XALU_FPGACONFIG)

cop_verilog: $(fpga-rocketchip-cop-verilog) $(FPGA)/soc/$(SOC)/system_top_wrapper.v $(rtl64_cop_src) $(rtl64_ise_src)
	mkdir -p $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources
	mkdir -p $(FPGA_BUILD)/$(VIVADO_PROJECT)/prog-bin
	cp -f $(FPGA)/soc/$(SOC)/system_top_wrapper.v $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/system_top_wrapper.v
	cp -f $(fpga-rocketchip-cop-verilog)            $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/rocketcore.v
	cp -f $(rocketchip_cop_ram_src)                 $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/memcore.v
	cp -f $(rocketchip_support_src)                 $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/
	cp -f $(rtl64_cop_src)                          $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/
	cp -f $(rtl64_ise_src)                          $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/

xalu_verilog: $(fpga-rocketchip-xalu-verilog) $(FPGA)/soc/$(SOC)/system_top_wrapper.v $(rtl64_xalu_src) $(rtl64_ise_src)
	mkdir -p $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources
	mkdir -p $(FPGA_BUILD)/$(VIVADO_PROJECT)/prog-bin
	cp -f $(FPGA)/soc/$(SOC)/system_top_wrapper.v $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/system_top_wrapper.v
	cp -f $(fpga-rocketchip-xalu-verilog)           $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/rocketcore.v
	cp -f $(rocketchip_xalu_ram_src)                $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/memcore.v
	cp -f $(rocketchip_support_src)                 $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/
	cp -f $(rtl64_xalu_src)                         $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/
	cp -f $(rtl64_ise_src)                          $(FPGA_BUILD)/$(VIVADO_PROJECT)/rtl_sources/

#--------------------------------------------------------------------
# Update Program helper
#--------------------------------------------------------------------
search-ramb: $(FPGA_BUILD)/$(VIVADO_PROJECT)/prog.mmi
$(FPGA_BUILD)/$(VIVADO_PROJECT)/prog.mmi: $(bitstream)
	$(VIVADO) -mode batch -source $(FPGA)/script/search_ramb.tcl -tclargs $(VIVADO_PROJECT) $(FPGA_BUILD) > $(FPGA_BUILD)/$(VIVADO_PROJECT)/search-ramb.info
	python $(FPGA)/script/mmi_gen.py $(FPGA_BUILD)/$(VIVADO_PROJECT)/search-ramb.info $(FPGA_BUILD)/$(VIVADO_PROJECT)/prog.mmi 64 32768 $(part)


